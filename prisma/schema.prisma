// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String?
  theme       String
  interviewee String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  questions      Question[]
  transcriptions Transcription[]
  summaries      Summary[]
  articles       Article[]

  @@map("projects")
}

model Question {
  id        String   @id @default(cuid())
  content   String
  order     Int
  projectId String
  createdAt DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("questions")
}

model Transcription {
  id        String   @id @default(cuid())
  audioUrl  String
  text      String
  projectId String
  createdAt DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("transcriptions")
}

model Summary {
  id        String   @id @default(cuid())
  content   String
  projectId String
  createdAt DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("summaries")
}

model Article {
  id          String   @id @default(cuid())
  title       String
  content     String
  format      String   @default("markdown")
  articleType String   @default("BLOG_POST")
  language    String   @default("ja")
  slug        String?
  tone        String?
  status      String   @default("DRAFT")
  outline     String?  // JSON string for OutlineSection[]
  meta        String?  // JSON string for BlogMeta | HowToMeta
  projectId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@map("articles")
}